// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Image Controlled 1`] = `
<div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      <div
        style={
          Object {
            "borderBottom": "1px solid #eee",
            "marginBottom": 10,
            "paddingTop": 10,
          }
        }
      >
        <h1
          style={
            Object {
              "fontSize": "35px",
              "margin": 0,
              "padding": 0,
            }
          }
        >
          Image
        </h1>
        <h2
          style={
            Object {
              "fontSize": "22px",
              "fontWeight": 400,
              "margin": "0 0 10px 0",
              "padding": 0,
            }
          }
        >
          Controlled
        </h2>
      </div>
    </div>
  </div>
  <div>
    <div>
      <div>
        <h2>
          Start from 
          upload
        </h2>
        <div
          style={
            Object {
              "WebkitTapHighlightColor": "rgba(0,0,0,0)",
              "backgroundColor": "#ffffff",
              "borderRadius": 2,
              "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                     0 1px 4px rgba(0, 0, 0, 0.12)",
              "boxSizing": "border-box",
              "color": "rgba(0, 0, 0, 0.87)",
              "fontFamily": "Roboto, sans-serif",
              "maxWidth": 300,
              "muiPrepared": true,
              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
              "zIndex": 1,
            }
          }
        >
          <div
            style={
              Object {
                "paddingBottom": 0,
              }
            }
          >
            <div
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontSize": 14,
                  "maxHeight": 300,
                  "muiPrepared": true,
                  "padding": 16,
                  "paddingBottom": 0,
                }
              }
            />
            <div
              style={
                Object {
                  "muiPrepared": true,
                  "padding": 8,
                  "position": "relative",
                }
              }
            >
              <div
                className={undefined}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                    "backgroundColor": "#ffffff",
                    "borderRadius": 2,
                    "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                           0 1px 4px rgba(0, 0, 0, 0.12)",
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.87)",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "marginRight": 8,
                    "minWidth": 88,
                    "muiPrepared": true,
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                  }
                }
              >
                <label
                  disabled={false}
                  href={undefined}
                  name="Select"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchStart={[Function]}
                  onTouchTap={[Function]}
                  style={
                    Object {
                      "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                      "backgroundColor": "#00bcd4",
                      "border": 10,
                      "borderRadius": 2,
                      "boxSizing": "border-box",
                      "cursor": "pointer",
                      "display": "inline-block",
                      "fontFamily": "Roboto, sans-serif",
                      "fontSize": "inherit",
                      "fontWeight": "inherit",
                      "height": 36,
                      "lineHeight": "36px",
                      "margin": 0,
                      "muiPrepared": true,
                      "outline": "none",
                      "padding": 0,
                      "position": "relative",
                      "textAlign": "center",
                      "textDecoration": "none",
                      "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                      "verticalAlign": null,
                      "width": "100%",
                      "zIndex": 1,
                    }
                  }
                  tabIndex={0}
                >
                  <div
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                  >
                    <div
                      style={
                        Object {
                          "backgroundColor": false,
                          "borderRadius": 2,
                          "height": 36,
                          "muiPrepared": true,
                          "top": 0,
                          "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "color": "#ffffff",
                            "fontSize": 14,
                            "fontWeight": 500,
                            "letterSpacing": 0,
                            "margin": 0,
                            "muiPrepared": true,
                            "opacity": 1,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "position": "relative",
                            "textTransform": "uppercase",
                            "userSelect": "none",
                          }
                        }
                      >
                        Select Image
                      </span>
                      <input
                        accept="image/*"
                        multiple={false}
                        onChange={[Function]}
                        style={
                          Object {
                            "bottom": 0,
                            "cursor": "pointer",
                            "left": 0,
                            "opacity": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                            "width": "100%",
                          }
                        }
                        type="file"
                      />
                    </div>
                  </div>
                </label>
              </div>
              <button
                disabled={true}
                href={undefined}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                onTouchTap={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                    "backgroundColor": "rgba(0, 0, 0, 0)",
                    "border": 10,
                    "borderRadius": 2,
                    "boxSizing": "border-box",
                    "color": "rgba(0, 0, 0, 0.3)",
                    "cursor": "default",
                    "display": "inline-block",
                    "fontFamily": "Roboto, sans-serif",
                    "fontSize": "inherit",
                    "fontWeight": "inherit",
                    "height": 36,
                    "lineHeight": "36px",
                    "margin": 0,
                    "marginRight": 0,
                    "minWidth": 85,
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "hidden",
                    "padding": 0,
                    "position": "relative",
                    "textAlign": "center",
                    "textDecoration": "none",
                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "userSelect": "none",
                    "verticalAlign": null,
                    "zIndex": 1,
                  }
                }
                tabIndex={-1}
                type="button"
              >
                <span
                  style={
                    Object {
                      "fontSize": 14,
                      "fontWeight": 500,
                      "letterSpacing": 0,
                      "muiPrepared": true,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "position": "relative",
                      "textTransform": "uppercase",
                      "verticalAlign": "middle",
                    }
                  }
                >
                  Reset
                </span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <p>
          Control point to start from with knobs panel
        </p>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Story Source
        </h1>
        <pre
          style={
            Object {
              "backgroundColor": "#fafafa",
              "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
              "fontSize": ".88em",
              "lineHeight": 1.5,
              "overflowX": "scroll",
              "padding": ".5rem",
            }
          }
        >
          <div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                div
              </span>
              <span />
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &gt;
              </span>
            </div>
            <div>
              <div
                style={
                  Object {
                    "paddingLeft": 33,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#777",
                    }
                  }
                >
                  &lt;
                  h2
                </span>
                <span />
                <span
                  style={
                    Object {
                      "color": "#777",
                    }
                  }
                >
                  &gt;
                </span>
              </div>
              <div
                style={
                  Object {
                    "paddingLeft": 33,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#777",
                    }
                  }
                >
                  Start from 
                </span>
              </div>
              <div
                style={
                  Object {
                    "paddingLeft": 33,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#777",
                    }
                  }
                >
                  upload
                </span>
              </div>
              <div
                style={
                  Object {
                    "paddingLeft": 33,
                    "paddingRight": 3,
                  }
                }
              >
                <span
                  style={
                    Object {
                      "color": "#777",
                    }
                  }
                >
                  &lt;/
                  h2
                  &gt;
                </span>
              </div>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 33,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                Image
              </span>
              <span>
                <span>
                   
                  <span
                    style={Object {}}
                  >
                    uploadImage
                  </span>
                  <span>
                    =
                    <span
                      style={Object {}}
                    >
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          function uploadImage(dataUrl) {return new Promise(function (resolve, reject) {
                                log(dataUrl);
                                var upload = function upload() {return Math.random() &lt; 0.5 ?
                                  resolve({ url: dataUrl }) :
                                  reject(new Error('failed'));};
                                setTimeout(upload, 1000);
                              });}()
                        </span>
                      </span>
                    </span>
                  </span>
                   
                </span>
              </span>
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                /&gt;
              </span>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;/
                div
                &gt;
              </span>
            </div>
          </div>
        </pre>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h2
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            Image
            " Component
          </h2>
          <table
            style={
              Object {
                "borderCollapse": "separate",
                "borderSpacing": "10px 5px",
                "marginLeft": -10,
              }
            }
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  reset
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  image
                </td>
                <td>
                  other
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  failed
                </td>
                <td>
                  bool
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  cropping
                </td>
                <td>
                  bool
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  setImage
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  uploadImage
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  onUploadSucceed
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  openEditor
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  scale
                </td>
                <td>
                  number
                </td>
                <td>
                  no
                </td>
                <td>
                  <span>
                    <span
                      style={
                        Object {
                          "color": "#a11",
                        }
                      }
                    >
                      1
                    </span>
                  </span>
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  setEditor
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  onUploadStart
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  setScale
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  initialState
                </td>
                <td>
                  other
                </td>
                <td>
                  no
                </td>
                <td>
                  <span>
                    <span
                      style={
                        Object {
                          "color": "#666",
                        }
                      }
                    >
                      {
                      <span
                        style={
                          Object {
                            "color": "#666",
                          }
                        }
                      >
                        scale
                      </span>
                      : 
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#a11",
                            }
                          }
                        >
                          1
                        </span>
                      </span>
                      , 
                      <span
                        style={
                          Object {
                            "color": "#666",
                          }
                        }
                      >
                        uploading
                      </span>
                      : 
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#a11",
                            }
                          }
                        >
                          false
                        </span>
                      </span>
                      , 
                      <span
                        style={
                          Object {
                            "color": "#666",
                          }
                        }
                      >
                        failed
                      </span>
                      : 
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#a11",
                            }
                          }
                        >
                          false
                        </span>
                      </span>
                      , 
                      …
                      }
                    </span>
                  </span>
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  onUploadFail
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  uploaded
                </td>
                <td>
                  bool
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  uploading
                </td>
                <td>
                  bool
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  url
                </td>
                <td>
                  string
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Image with initialState 1`] = `
<div
  style={
    Object {
      "WebkitTapHighlightColor": "rgba(0,0,0,0)",
      "backgroundColor": "#ffffff",
      "borderRadius": 2,
      "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
             0 1px 4px rgba(0, 0, 0, 0.12)",
      "boxSizing": "border-box",
      "color": "rgba(0, 0, 0, 0.87)",
      "fontFamily": "Roboto, sans-serif",
      "maxWidth": 300,
      "muiPrepared": true,
      "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
      "zIndex": 1,
    }
  }
>
  <div
    style={
      Object {
        "paddingBottom": 0,
      }
    }
  >
    <div
      style={
        Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontSize": 14,
          "maxHeight": 300,
          "muiPrepared": true,
          "padding": 16,
          "paddingBottom": 0,
        }
      }
    >
      <div>
        <div
          style={
            Object {
              "muiPrepared": true,
            }
          }
          value={1}
        >
          <div
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "cursor": "default",
                "height": 18,
                "margin": "5px 0",
                "marginBottom": 48,
                "marginTop": 24,
                "muiPrepared": true,
                "position": "relative",
                "touchCallout": "none",
                "userSelect": "none",
                "width": "100%",
              }
            }
          >
            <div
              style={
                Object {
                  "height": 2,
                  "left": 0,
                  "muiPrepared": true,
                  "position": "absolute",
                  "top": 8,
                  "width": "100%",
                }
              }
            >
              <div
                style={
                  Object {
                    "[object Object]": 0,
                    "backgroundColor": "#00bcd4",
                    "directionInvariant": true,
                    "height": "100%",
                    "left": 0,
                    "marginRight": 6,
                    "muiPrepared": true,
                    "position": "absolute",
                    "transition": "margin 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "width": "calc(0%)",
                  }
                }
              />
              <div
                style={
                  Object {
                    "[object Object]": 0,
                    "backgroundColor": "#bdbdbd",
                    "directionInvariant": true,
                    "height": "100%",
                    "marginLeft": 6,
                    "muiPrepared": true,
                    "position": "absolute",
                    "right": 0,
                    "transition": "margin 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "width": "calc(100%)",
                  }
                }
              />
              <div
                style={
                  Object {
                    "backgroundClip": "padding-box",
                    "backgroundColor": "#ffffff",
                    "border": "2px solid #bdbdbd",
                    "borderRadius": "50%",
                    "boxShadow": "none",
                    "boxSizing": "border-box",
                    "cursor": "pointer",
                    "directionInvariant": true,
                    "height": 12,
                    "left": "0%",
                    "margin": "1px 0 0 0",
                    "muiPrepared": true,
                    "outline": "none",
                    "overflow": "visible",
                    "pointerEvents": "inherit",
                    "position": "absolute",
                    "top": 0,
                    "transform": "translate(-50%, -50%)",
                    "transition": "background 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, border-color 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, width 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, height 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    "width": 12,
                    "zIndex": 1,
                  }
                }
                tabIndex={0}
              >
                <div
                  style={
                    Object {
                      "height": 12,
                      "left": -2,
                      "muiPrepared": true,
                      "overflow": "visible",
                      "position": "absolute",
                      "top": -2,
                      "width": 12,
                    }
                  }
                />
              </div>
            </div>
          </div>
          <input
            max={2}
            min={1}
            name={undefined}
            required={true}
            step={0.01}
            type="hidden"
            value={1}
          />
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "muiPrepared": true,
          "padding": 8,
          "position": "relative",
        }
      }
    >
      <div
        className={undefined}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "#ffffff",
            "borderRadius": 2,
            "boxShadow": undefined,
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "display": "inline-block",
            "fontFamily": "Roboto, sans-serif",
            "marginRight": 8,
            "minWidth": 88,
            "muiPrepared": true,
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
      >
        <button
          disabled={true}
          href={undefined}
          name="Upload"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onTouchTap={[Function]}
          style={
            Object {
              "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
              "backgroundColor": "rgb(229, 229, 229)",
              "border": 10,
              "borderRadius": 2,
              "boxSizing": "border-box",
              "cursor": "default",
              "display": "inline-block",
              "fontFamily": "Roboto, sans-serif",
              "fontSize": "inherit",
              "fontWeight": "inherit",
              "height": 36,
              "lineHeight": "36px",
              "margin": 0,
              "muiPrepared": true,
              "outline": "none",
              "padding": 0,
              "position": "relative",
              "textAlign": "center",
              "textDecoration": "none",
              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
              "verticalAlign": null,
              "width": "100%",
              "zIndex": 1,
            }
          }
          tabIndex={-1}
          type="button"
        >
          <div
            style={
              Object {
                "backgroundColor": false,
                "borderRadius": 2,
                "height": 36,
                "muiPrepared": true,
                "top": 0,
                "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
              }
            }
          >
            <span
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.3)",
                  "fontSize": 14,
                  "fontWeight": 500,
                  "letterSpacing": 0,
                  "margin": 0,
                  "muiPrepared": true,
                  "opacity": 1,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "position": "relative",
                  "textTransform": "uppercase",
                  "userSelect": "none",
                }
              }
            >
              Upload
            </span>
          </div>
        </button>
      </div>
      <div
        className={undefined}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "backgroundColor": "#ffffff",
            "borderRadius": 2,
            "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                   0 1px 4px rgba(0, 0, 0, 0.12)",
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "display": "inline-block",
            "fontFamily": "Roboto, sans-serif",
            "marginRight": 8,
            "minWidth": 88,
            "muiPrepared": true,
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
          }
        }
      >
        <label
          disabled={false}
          href={undefined}
          name="Select"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
          onTouchTap={[Function]}
          style={
            Object {
              "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
              "backgroundColor": "#00bcd4",
              "border": 10,
              "borderRadius": 2,
              "boxSizing": "border-box",
              "cursor": "pointer",
              "display": "inline-block",
              "fontFamily": "Roboto, sans-serif",
              "fontSize": "inherit",
              "fontWeight": "inherit",
              "height": 36,
              "lineHeight": "36px",
              "margin": 0,
              "muiPrepared": true,
              "outline": "none",
              "padding": 0,
              "position": "relative",
              "textAlign": "center",
              "textDecoration": "none",
              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
              "verticalAlign": null,
              "width": "100%",
              "zIndex": 1,
            }
          }
          tabIndex={0}
        >
          <div
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
          >
            <div
              style={
                Object {
                  "backgroundColor": false,
                  "borderRadius": 2,
                  "height": 36,
                  "muiPrepared": true,
                  "top": 0,
                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#ffffff",
                    "fontSize": 14,
                    "fontWeight": 500,
                    "letterSpacing": 0,
                    "margin": 0,
                    "muiPrepared": true,
                    "opacity": 1,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "position": "relative",
                    "textTransform": "uppercase",
                    "userSelect": "none",
                  }
                }
              >
                Change
              </span>
              <input
                accept="image/*"
                multiple={false}
                onChange={[Function]}
                style={
                  Object {
                    "bottom": 0,
                    "cursor": "pointer",
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "width": "100%",
                  }
                }
                type="file"
              />
            </div>
          </div>
        </label>
      </div>
      <button
        disabled={false}
        href={undefined}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onTouchStart={[Function]}
        onTouchTap={[Function]}
        style={
          Object {
            "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "border": 10,
            "borderRadius": 2,
            "boxSizing": "border-box",
            "color": "rgba(0, 0, 0, 0.87)",
            "cursor": "pointer",
            "display": "inline-block",
            "fontFamily": "Roboto, sans-serif",
            "fontSize": "inherit",
            "fontWeight": "inherit",
            "height": 36,
            "lineHeight": "36px",
            "margin": 0,
            "marginRight": 0,
            "minWidth": 85,
            "muiPrepared": true,
            "outline": "none",
            "overflow": "hidden",
            "padding": 0,
            "position": "relative",
            "textAlign": "center",
            "textDecoration": "none",
            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
            "userSelect": "none",
            "verticalAlign": null,
            "zIndex": 1,
          }
        }
        tabIndex={0}
        type="button"
      >
        <div
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchStart={[Function]}
        >
          <span
            style={
              Object {
                "fontSize": 14,
                "fontWeight": 500,
                "letterSpacing": 0,
                "muiPrepared": true,
                "paddingLeft": 16,
                "paddingRight": 16,
                "position": "relative",
                "textTransform": "uppercase",
                "verticalAlign": "middle",
              }
            }
          >
            Reset
          </span>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots RenderCounter Counter 1`] = `
<div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      <div
        style={
          Object {
            "borderBottom": "1px solid #eee",
            "marginBottom": 10,
            "paddingTop": 10,
          }
        }
      >
        <h1
          style={
            Object {
              "fontSize": "35px",
              "margin": 0,
              "padding": 0,
            }
          }
        >
          RenderCounter
        </h1>
        <h2
          style={
            Object {
              "fontSize": "22px",
              "fontWeight": 400,
              "margin": "0 0 10px 0",
              "padding": 0,
            }
          }
        >
          Counter
        </h2>
      </div>
    </div>
  </div>
  <div>
    <div>
      <div
        style={
          Object {
            "border": "solid 1px grey",
            "minHeight": 100,
            "padding": 10,
            "width": "50%",
          }
        }
      >
        <div
          style={
            Object {
              "backgroundColor": "#f95",
              "borderRadius": "8px",
              "color": "white",
              "display": "inline-block",
              "float": "right",
              "fontSize": "8pt",
              "fontWeight": "bold",
              "padding": "1px 5px",
              "textAlign": "center",
              "top": "2px",
            }
          }
        >
          1
        </div>
      </div>
    </div>
  </div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Story Source
        </h1>
        <pre
          style={
            Object {
              "backgroundColor": "#fafafa",
              "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
              "fontSize": ".88em",
              "lineHeight": 1.5,
              "overflowX": "scroll",
              "padding": ".5rem",
            }
          }
        >
          <div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                div
              </span>
              <span>
                <span>
                   
                  <span
                    style={Object {}}
                  >
                    style
                  </span>
                  <span>
                    =
                    <span
                      style={Object {}}
                    >
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            width
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            "
                            50%
                            "
                          </span>
                          , 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            minHeight
                          </span>
                          : 
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              100
                            </span>
                          </span>
                          , 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            border
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            "
                            solid 1px grey
                            "
                          </span>
                          , 
                          …
                          }
                        </span>
                      </span>
                    </span>
                  </span>
                  
                </span>
              </span>
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &gt;
              </span>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 33,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                Counter
              </span>
              <span>
                <span>
                   
                  <span
                    style={Object {}}
                  >
                    count
                  </span>
                  <span>
                    =
                    <span
                      style={Object {}}
                    >
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#a11",
                            }
                          }
                        >
                          1
                        </span>
                      </span>
                    </span>
                  </span>
                   
                </span>
              </span>
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                /&gt;
              </span>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;/
                div
                &gt;
              </span>
            </div>
          </div>
        </pre>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h2
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            Counter
            " Component
          </h2>
          <table
            style={
              Object {
                "borderCollapse": "separate",
                "borderSpacing": "10px 5px",
                "marginLeft": -10,
              }
            }
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  count
                </td>
                <td>
                  number
                </td>
                <td>
                  yes
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots RenderCounter RenderCounter 1`] = `
<div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      <div
        style={
          Object {
            "borderBottom": "1px solid #eee",
            "marginBottom": 10,
            "paddingTop": 10,
          }
        }
      >
        <h1
          style={
            Object {
              "fontSize": "35px",
              "margin": 0,
              "padding": 0,
            }
          }
        >
          RenderCounter
        </h1>
        <h2
          style={
            Object {
              "fontSize": "22px",
              "fontWeight": 400,
              "margin": "0 0 10px 0",
              "padding": 0,
            }
          }
        >
          RenderCounter
        </h2>
      </div>
    </div>
  </div>
  <div>
    <div>
      <div
        style={
          Object {
            "border": "solid 1px grey",
            "minHeight": 100,
            "padding": 10,
            "width": "50%",
          }
        }
      >
        <div
          style={
            Object {
              "backgroundColor": "#f95",
              "borderRadius": "8px",
              "color": "white",
              "display": "inline-block",
              "float": "right",
              "fontSize": "8pt",
              "fontWeight": "bold",
              "padding": "1px 5px",
              "textAlign": "center",
              "top": "2px",
            }
          }
        >
          1
        </div>
      </div>
    </div>
  </div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <p>
          This is the basic usage inside any component.
        </p>
        <p>
          NOTICE: You may see them render some extra times. That’s a bug of storybook when you enter this page directly.
          Click another menu and re-enter this page to see real render times.
        </p>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Story Source
        </h1>
        <pre
          style={
            Object {
              "backgroundColor": "#fafafa",
              "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
              "fontSize": ".88em",
              "lineHeight": 1.5,
              "overflowX": "scroll",
              "padding": ".5rem",
            }
          }
        >
          <div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                div
              </span>
              <span>
                <span>
                   
                  <span
                    style={Object {}}
                  >
                    style
                  </span>
                  <span>
                    =
                    <span
                      style={Object {}}
                    >
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            width
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            "
                            50%
                            "
                          </span>
                          , 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            minHeight
                          </span>
                          : 
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              100
                            </span>
                          </span>
                          , 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            border
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            "
                            solid 1px grey
                            "
                          </span>
                          , 
                          …
                          }
                        </span>
                      </span>
                    </span>
                  </span>
                  
                </span>
              </span>
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &gt;
              </span>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 33,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                RenderCounter
              </span>
              <span />
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                /&gt;
              </span>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;/
                div
                &gt;
              </span>
            </div>
          </div>
        </pre>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h2
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            RenderCounter
            " Component
          </h2>
          <table
            style={
              Object {
                "borderCollapse": "separate",
                "borderSpacing": "10px 5px",
                "marginLeft": -10,
              }
            }
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  initialCount
                </td>
                <td>
                  number
                </td>
                <td>
                  no
                </td>
                <td>
                  <span>
                    <span
                      style={
                        Object {
                          "color": "#a11",
                        }
                      }
                    >
                      1
                    </span>
                  </span>
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  onRerender
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots RenderCounter StatelessRenderCounter 1`] = `
<div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      <div
        style={
          Object {
            "borderBottom": "1px solid #eee",
            "marginBottom": 10,
            "paddingTop": 10,
          }
        }
      >
        <h1
          style={
            Object {
              "fontSize": "35px",
              "margin": 0,
              "padding": 0,
            }
          }
        >
          RenderCounter
        </h1>
        <h2
          style={
            Object {
              "fontSize": "22px",
              "fontWeight": 400,
              "margin": "0 0 10px 0",
              "padding": 0,
            }
          }
        >
          StatelessRenderCounter
        </h2>
      </div>
    </div>
  </div>
  <div>
    <div>
      <div
        style={
          Object {
            "border": "solid 1px grey",
            "minHeight": 100,
            "padding": 10,
            "width": "50%",
          }
        }
      >
        <div
          style={
            Object {
              "backgroundColor": "#f95",
              "borderRadius": "8px",
              "color": "white",
              "display": "inline-block",
              "float": "right",
              "fontSize": "8pt",
              "fontWeight": "bold",
              "padding": "1px 5px",
              "textAlign": "center",
              "top": "2px",
            }
          }
        >
          1
        </div>
      </div>
    </div>
  </div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      <div
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <p>
          This is another implement of RenderCounter
        </p>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Story Source
        </h1>
        <pre
          style={
            Object {
              "backgroundColor": "#fafafa",
              "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
              "fontSize": ".88em",
              "lineHeight": 1.5,
              "overflowX": "scroll",
              "padding": ".5rem",
            }
          }
        >
          <div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                div
              </span>
              <span>
                <span>
                   
                  <span
                    style={Object {}}
                  >
                    style
                  </span>
                  <span>
                    =
                    <span
                      style={Object {}}
                    >
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            width
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            "
                            50%
                            "
                          </span>
                          , 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            minHeight
                          </span>
                          : 
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              100
                            </span>
                          </span>
                          , 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            border
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            "
                            solid 1px grey
                            "
                          </span>
                          , 
                          …
                          }
                        </span>
                      </span>
                    </span>
                  </span>
                  
                </span>
              </span>
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &gt;
              </span>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 33,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                withRenderCount(Counter)
              </span>
              <span />
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                /&gt;
              </span>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;/
                div
                &gt;
              </span>
            </div>
          </div>
        </pre>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h2
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            withRenderCount(Counter)
            " Component
          </h2>
          <table
            style={
              Object {
                "borderCollapse": "separate",
                "borderSpacing": "10px 5px",
                "marginLeft": -10,
              }
            }
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  initialCount
                </td>
                <td>
                  number
                </td>
                <td>
                  no
                </td>
                <td>
                  <span>
                    <span
                      style={
                        Object {
                          "color": "#a11",
                        }
                      }
                    >
                      1
                    </span>
                  </span>
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  onRerender
                </td>
                <td>
                  func
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots RenderCounter inside DivRefreshable 1`] = `
<div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      <div
        style={
          Object {
            "borderBottom": "1px solid #eee",
            "marginBottom": 10,
            "paddingTop": 10,
          }
        }
      >
        <h1
          style={
            Object {
              "fontSize": "35px",
              "margin": 0,
              "padding": 0,
            }
          }
        >
          RenderCounter
        </h1>
        <h2
          style={
            Object {
              "fontSize": "22px",
              "fontWeight": 400,
              "margin": "0 0 10px 0",
              "padding": 0,
            }
          }
        >
          inside DivRefreshable
        </h2>
      </div>
    </div>
  </div>
  <div>
    <div>
      <div
        style={
          Object {
            "border": "solid 1px grey",
            "minHeight": 100,
            "padding": 10,
            "width": "50%",
          }
        }
      >
        <button
          onClick={[Function]}
        >
          Counter re-rendered in 50% possibility
        </button>
        <div
          style={
            Object {
              "backgroundColor": "#f95",
              "borderRadius": "8px",
              "color": "white",
              "display": "inline-block",
              "float": "right",
              "fontSize": "8pt",
              "fontWeight": "bold",
              "padding": "1px 5px",
              "textAlign": "center",
              "top": "2px",
            }
          }
        >
          1
        </div>
      </div>
    </div>
  </div>
  <div
    style={undefined}
  >
    <div
      style={
        Object {
          "WebkitFontSmoothing": "antialiased",
          "color": "#444",
          "fontFamily": "
            -apple-system, \\".SFNSText-Regular\\", \\"San Francisco\\", \\"Roboto\\",
            \\"Segoe UI\\", \\"Helvetica Neue\\", \\"Lucida Grande\\", sans-serif
          ",
          "fontSize": "15px",
          "fontWeight": 300,
          "lineHeight": 1.45,
        }
      }
    >
      <div
        style={
          Object {
            "borderTop": "1px solid #eee",
            "margin": "20px 0 0 0",
          }
        }
      >
        <div>
          <h2>
            DivRefreshable
          </h2>
          <p>
            <strong>
              DivRefreshable
            </strong>
             is a div with a button that can refresh itself
          </p>
          <p>
            It will update its only child if cloneChild prop is set to true
          </p>
        </div>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Story Source
        </h1>
        <pre
          style={
            Object {
              "backgroundColor": "#fafafa",
              "fontFamily": "Menlo, Monaco, \\"Courier New\\", monospace",
              "fontSize": ".88em",
              "lineHeight": 1.5,
              "overflowX": "scroll",
              "padding": ".5rem",
            }
          }
        >
          <div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                DivRefreshable
              </span>
              <span>
                <span>
                   
                  <span
                    style={Object {}}
                  >
                    label
                  </span>
                  <span>
                    =
                    <span
                      style={Object {}}
                    >
                      <span
                        style={
                          Object {
                            "color": "#22a",
                            "wordBreak": "break-word",
                          }
                        }
                      >
                        "
                        Counter re-rendered in 50% possibility
                        "
                      </span>
                    </span>
                  </span>
                </span>
                <span>
                   
                  <span
                    style={Object {}}
                  >
                    style
                  </span>
                  <span>
                    =
                    <span
                      style={Object {}}
                    >
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#666",
                            }
                          }
                        >
                          {
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            width
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            "
                            50%
                            "
                          </span>
                          , 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            minHeight
                          </span>
                          : 
                          <span>
                            <span
                              style={
                                Object {
                                  "color": "#a11",
                                }
                              }
                            >
                              100
                            </span>
                          </span>
                          , 
                          <span
                            style={
                              Object {
                                "color": "#666",
                              }
                            }
                          >
                            border
                          </span>
                          : 
                          <span
                            style={
                              Object {
                                "color": "#22a",
                                "wordBreak": "break-word",
                              }
                            }
                          >
                            "
                            solid 1px grey
                            "
                          </span>
                          , 
                          …
                          }
                        </span>
                      </span>
                    </span>
                  </span>
                  
                </span>
              </span>
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &gt;
              </span>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 33,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;
                RenderCounter
              </span>
              <span>
                <span>
                   
                  <span
                    style={Object {}}
                  >
                    onRerender
                  </span>
                  <span>
                    =
                    <span
                      style={Object {}}
                    >
                      <span>
                        <span
                          style={
                            Object {
                              "color": "#170",
                            }
                          }
                        >
                          function handler(props, next) {return function (count) {
                                if (Math.random() &lt; possibility) {
                                  next();
                                  log('hit', possibility, props, count);
                                } else {
                                  log('miss', possibility, props, count);
                                }
                              };}()
                        </span>
                      </span>
                    </span>
                  </span>
                   
                </span>
              </span>
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                /&gt;
              </span>
            </div>
            <div
              style={
                Object {
                  "paddingLeft": 18,
                  "paddingRight": 3,
                }
              }
            >
              <span
                style={
                  Object {
                    "color": "#777",
                  }
                }
              >
                &lt;/
                DivRefreshable
                &gt;
              </span>
            </div>
          </div>
        </pre>
      </div>
      <div>
        <h1
          style={
            Object {
              "borderBottom": "1px solid #EEE",
              "fontSize": "25px",
              "margin": "20px 0 0 0",
              "padding": "0 0 5px 0",
            }
          }
        >
          Prop Types
        </h1>
        <div>
          <h2
            style={
              Object {
                "margin": "20px 0 0 0",
              }
            }
          >
            "
            DivRefreshable
            " Component
          </h2>
          <table
            style={
              Object {
                "borderCollapse": "separate",
                "borderSpacing": "10px 5px",
                "marginLeft": -10,
              }
            }
          >
            <thead>
              <tr>
                <th>
                  property
                </th>
                <th>
                  propType
                </th>
                <th>
                  required
                </th>
                <th>
                  default
                </th>
                <th>
                  description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  children
                </td>
                <td>
                  element
                </td>
                <td>
                  no
                </td>
                <td>
                  -
                </td>
                <td />
              </tr>
              <tr>
                <td>
                  label
                </td>
                <td>
                  string
                </td>
                <td>
                  no
                </td>
                <td>
                  <span
                    style={
                      Object {
                        "color": "#22a",
                        "wordBreak": "break-word",
                      }
                    }
                  >
                    "
                    Refresh
                    "
                  </span>
                </td>
                <td />
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Welcome to Storybook 1`] = `
<div
  style={
    Object {
      "fontFamily": "\\"Helvetica Neue\\", Helvetica, \\"Segoe UI\\", Arial, freesans, sans-serif",
      "lineHeight": 1.4,
      "margin": 15,
    }
  }
>
  <h1>
    Welcome to STORYBOOK
  </h1>
  <p>
    This is a UI component dev environment for your app.
  </p>
  <p>
    We've
     added some basic stories inside the 
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      src/stories
    </code>
     directory.
    <br />
    A story is a single state of one or more UI components. You can have as many stories as you want.
    <br />
    (Basically a story is like a visual test case.)
  </p>
  <p>
    See these sample 
    <a
      href="#/"
      onClick={[Function]}
      style={
        Object {
          "borderBottom": "1px solid #1474f3",
          "color": "#1474f3",
          "paddingBottom": 2,
          "textDecoration": "none",
        }
      }
    >
      stories
    </a>
     for a component called 
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      RenderCounter
    </code>
    .
  </p>
  <p>
    Just like that, you can add your own components as stories.
    <br />
    You can also edit those components and see changes right away.
    <br />
    (Try editing the 
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      Button
    </code>
     component located at 
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      src/stories/Button.js
    </code>
    .)
  </p>
  <p>
    This is just one thing you can do with Storybook.
    <br />
    Have a look at the 
    <a
      href="https://github.com/kadirahq/react-storybook"
      rel="noopener noreferrer"
      style={
        Object {
          "borderBottom": "1px solid #1474f3",
          "color": "#1474f3",
          "paddingBottom": 2,
          "textDecoration": "none",
        }
      }
      target="_blank"
    >
      React Storybook
    </a>
     repo for more information.
  </p>
  <p
    style={
      Object {
        "opacity": 0.5,
      }
    }
  >
    <b>
      NOTE:
    </b>
    <br />
    Have a look at the 
    <code
      style={
        Object {
          "backgroundColor": "#f3f2f2",
          "border": "1px solid #eae9e9",
          "borderRadius": 4,
          "color": "#3a3a3a",
          "fontSize": 15,
          "fontWeight": 600,
          "padding": "2px 5px",
        }
      }
    >
      .storybook/webpack.config.js
    </code>
     to add webpack loaders and plugins you are using in this project.
  </p>
</div>
`;

exports[`Storyshots Welcome to react-render-counter 1`] = `
<div>
  <h1
    className={undefined}
    data-sourcepos={undefined}
  >
    hhh
  </h1>
  <h2
    className={undefined}
    data-sourcepos={undefined}
  >
    h2
  </h2>
</div>
`;

exports[`Storyshots Welcome to stupid-rc-starter 1`] = `
<div>
  <h1
    className={undefined}
    data-sourcepos={undefined}
  >
    hhh
  </h1>
  <h2
    className={undefined}
    data-sourcepos={undefined}
  >
    h2
  </h2>
</div>
`;
